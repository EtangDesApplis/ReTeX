{"version":3,"sources":["logo.svg","ko-fi.png","Wait.js","MyForm.js","index.js"],"names":["module","exports","Wait","src","logo","className","alt","OutputZone","props","state","response","Status","fetch","backend","LogFile","then","text","console","log","style","width","type","data","onClick","OutputFile","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","split","pop","click","kofi","height","MyForm","giturl","texfile","handleChange1","bind","handleChange2","handleSubmit","event","this","setState","target","value","requestOptions","method","headers","body","JSON","stringify","main","conf","json","preventDefault","onSubmit","onChange","Component","App","ReactDOM","render","getElementById"],"mappings":"mTAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,kNCW5BC,MANf,WACE,OACM,+CAAoB,yBAAKC,IAAKC,IAAMC,UAAU,WAAWC,IAAI,W,wBCF/DC,EAAa,SAAAC,GAgBjB,OAA4B,IAAxBA,EAAMC,MAAMC,SAEP,6BACyB,IAAxBF,EAAMC,MAAMC,SAEb,kBAAC,EAAD,MAG2B,OAA9BF,EAAMC,MAAMC,SAASC,QACvBC,MAAMJ,EAAMC,MAAMI,QAAQL,EAAMC,MAAMC,SAASI,SAC5CC,MAAK,SAAAL,GAAQ,OAAIA,EAASM,UAC1BD,MAAK,SAAAC,GACJC,QAAQC,IAAIF,MAId,6BACI,uCACE,4BAAQG,MAAO,CAAEC,MAAO,QAAUC,KAAK,aAAaC,KAAMd,EAAMC,MAAMI,QAAQL,EAAMC,MAAMC,SAASI,SAAnG,eAEF,4BAAQS,QAjCE,WAClBX,MAAMJ,EAAMC,MAAMI,QAAQL,EAAMC,MAAMC,SAASc,YAC5CT,MAAK,SAAAL,GACJA,EAASe,OAAOV,MAAK,SAAAU,GACnB,IAAIC,EAAMC,OAAOC,IAAIC,gBAAgBJ,GACjCK,EAAIC,SAASC,cAAc,KAC/BF,EAAEG,KAAOP,EACTI,EAAEI,SAAW1B,EAAMC,MAAMC,SAASc,WAAWW,MAAM,KAAKC,MACxDN,EAAEO,gBAyBA,iBACA,6BACA,0FACE,uBAAGJ,KAAK,8BAA6B,yBAAK9B,IAAKmC,IAAMhC,IAAI,aAAaiC,OAAO,WAK9E,+BAAK/B,EAAMC,MAAMC,SAASC,OAA1B,MAmHE6B,E,kDA7GX,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACgC,OAAQ,8CACRC,QAAS,oBACThC,SAAU,EACVG,QAAQ,IACtB,EAAK8B,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBARL,E,0DAWLG,GACZC,KAAKC,SAAS,CAACR,OAAQM,EAAMG,OAAOC,U,oCAGxBJ,GACZC,KAAKC,SAAS,CAACP,QAASK,EAAMG,OAAOC,U,mCAG1BJ,GAAQ,IAAD,OAChB9B,QAAQC,IAAI8B,KAAKvC,MAAMiC,SAEvBM,KAAKC,SAAS,CAAEvC,SAAU,IAK1B,IAAM0C,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAE3BC,KAAMC,KAAKC,UAAU,CAAE/B,IAAKsB,KAAKvC,MAAMgC,OAAQiB,KAAMV,KAAKvC,MAAMiC,WA6ClEM,KAAKC,SAAS,CAACpC,QAAS8C,EAAK9C,UAC7BI,QAAQC,IAAIyC,EAAK9C,SACjBI,QAAQC,IAAI8B,KAAKvC,MAAMI,SACvBD,MAAM+C,EAAK9C,QAAU,OAAOuC,GACzBrC,MAAK,SAAAL,GAAQ,OAAIA,EAASkD,UAE1B7C,MAAK,SAAAO,GAEJL,QAAQC,IAAII,GACZ,EAAK2B,SAAS,CAAEvC,SAAUY,OAG9ByB,EAAMc,mB,+BAIN,OACE,6BACE,0BAAMC,SAAUd,KAAKF,cACnB,+CAEE,2BAAOzB,KAAK,OAAO8B,MAAOH,KAAKvC,MAAMgC,OAAQsB,SAAUf,KAAKL,gBAF9D,YAGA,iDAEE,2BAAOtB,KAAK,OAAO8B,MAAOH,KAAKvC,MAAMiC,QAASqB,SAAUf,KAAKH,gBAF/D,YAGA,2BAAOxB,KAAK,SAAS8B,MAAM,mBAE7B,kBAAC,EAAD,CAAY1C,MAAOuC,KAAKvC,a,GAxGfuD,aCjDfC,E,uKAEF,OACE,yBAAK5D,UAAU,OACb,8EACA,kBAAC,EAAD,CAAQyC,aAAcE,KAAKF,oB,GALjBkB,aAWlBE,IAASC,OAAO,kBAAC,EAAD,MAASpC,SAASqC,eAAe,W","file":"static/js/main.f6dd1a1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/ko-fi.e1440a6f.png\";","import React from 'react';\n//import logo from './logo.png';\nimport logo from './logo.svg';\nimport './Wait.css';\n\nfunction Wait() {\n  return (\n        <p> Please wait ... <img src={logo} className=\"App-logo\" alt=\"logo\" /></p>\n  );\n}\n\nexport default Wait;\n","import React, {Component} from 'react';\nimport Wait from './Wait';\nimport conf from './conf.json';\nimport kofi from './ko-fi.png';\n\nconst OutputZone = props => {\n\n  // <a href={props.result.OutputFile} download=\"output.pdf\"> Download Here </a>\n  const downloadPdf = () => {\n    fetch(props.state.backend+props.state.response.OutputFile)\n      .then(response => {\n        response.blob().then(blob => {\n          let url = window.URL.createObjectURL(blob);\n          let a = document.createElement('a');\n          a.href = url;\n          a.download = props.state.response.OutputFile.split(\"/\").pop();\n          a.click();\n        });\n    });\n  }\n\n  if (props.state.response ===1){\n    //fresh session\n    return <br />\n  }else if (props.state.response ===2){\n    //awaiting response from back-end since POST request\n    return <Wait />\n  }else{\n    //receive response from back-end\n    if (props.state.response.Status===\"OK\"){\n      fetch(props.state.backend+props.state.response.LogFile)\n        .then(response => response.text())\n        .then(text => {\n          console.log(text);\n        })\n      //console.log(conf.backend+props.result.LogFile)\n      return (\n        <div>\n            <label> Log:\n              <object style={{ width: '100%' }} type=\"text/plain\" data={props.state.backend+props.state.response.LogFile} >Job failed</object>\n            </label>\n            <button onClick={downloadPdf}>Download Here</button>\n            <br/>\n            <p>If you appreciate this App, you could buy me a coffee here : \n              <a href=\"https://ko-fi.com/nguyen31\"><img src={kofi} alt=\"Ko-fi link\" height=\"40\"/></a>\n            </p>\n        </div>\n      );\n    }else{\n      return <p> {props.state.response.Status} </p>;\n    }\n  }\n}\n\nclass MyForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {giturl: 'https://github.com/EtangDesApplis/ReTeX.git',\n                      texfile: 'test/cv_homer.tex',\n                      response: 1,\n                      backend:''};\n        this.handleChange1 = this.handleChange1.bind(this);\n        this.handleChange2 = this.handleChange2.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChange1(event) { \n      this.setState({giturl: event.target.value});  \n    }\n\n    handleChange2(event) { \n      this.setState({texfile: event.target.value});  \n    }\n    //\n    handleSubmit(event) {\n        console.log(this.state.texfile);\n        //set to awating status\n        this.setState({ response: 2 })\n\n        //POST RESTFUL TO BACK END {repo: url, main: main.tex}\n        //https://jasonwatmore.com/post/2020/02/01/react-fetch-http-post-request-examples\n        //for timeout https://www.npmjs.com/package/fetch-timeout\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          //body: JSON.stringify({ title: 'React POST Request Example' })\n          body: JSON.stringify({ url: this.state.giturl, main: this.state.texfile })\n        };\n\n        /*\n        try{\n        // THIS TRY AND CATCH IS USELESS\n        //  if (conf.info===undefined){\n        //    throw \"use default backend\"\n        //  }\n          //get ip of backend from github\n          //curl https://raw.githubusercontent.com/EtangDesApplis/network-info/master/retex.json\n        \n          fetch(conf.info)\n            .then(reponse => reponse.json())\n            .then(data => {\n              if (conf.target===\"intIP\"){\n                this.setState({backend: \"http://\"+data.intIP+\":\"+conf.port});\n              }else{\n                this.setState({backend: \"http://\"+data.extIP+\":\"+conf.port});\n              }\n              console.log(this.state.backend)\n              //request backend to do the job\n              fetch(this.state.backend,requestOptions)\n                .then(backres => backres.json())\n                //wait til the reponse from back end\n                .then(backdata => {\n                  console.log(backdata)\n                  this.setState({ response: backdata })\n                });\n            });\n        }catch(e){\n          //use ip of backend from conf.json\n          this.setState({backend: conf.backend});\n          console.log(conf.backend);\n          console.log(this.state.backend);\n          fetch(this.state.backend,requestOptions)\n            .then(response => response.json())\n            //wait til the reponse from back end\n            .then(data => {\n              //print out reponse to debug\n              console.log(data)\n              this.setState({ response: data })\n            });\n        }\n        */\n        this.setState({backend: conf.backend});\n        console.log(conf.backend);\n        console.log(this.state.backend);\n        fetch(conf.backend + \"/api\",requestOptions)\n          .then(response => response.json())\n          //wait til the reponse from back end\n          .then(data => {\n            //print out reponse to debug\n            console.log(data)\n            this.setState({ response: data })\n          });\n\n        event.preventDefault();\n    }\n    \n    render() {\n        return (\n          <div>\n            <form onSubmit={this.handleSubmit}>\n              <label>\n                Git repo URL:\n                <input type=\"text\" value={this.state.giturl} onChange={this.handleChange1} />        </label>\n              <label>\n                Main .tex file:\n                <input type=\"text\" value={this.state.texfile} onChange={this.handleChange2} />        </label>\n              <input type=\"submit\" value=\"Build project\" />\n            </form>\n            <OutputZone state={this.state} />\n          </div>\n        );\n    }\n}\n\nexport default MyForm;","import React, {Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport MyForm from './MyForm';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h2>Build your LaTeX project on the fly with ReTeX</h2>\n        <MyForm handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}